@using DatabaseContext.ViewModels;
@model BillPayViewModel
@{
    ViewData["Title"] = "Modify Bill";
    Layout = "~/Views/Shared/customerlayout.cshtml";
}

<h2>Modifying bill in Account @Model.AccountNumber</h2>

<!-- Follows Tutorial 5 approach-->
<div class="row">
    <div class="col-md-10">
        <form asp-action="Modify">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.EditorFor(model => model.Amount)
                @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
                <label class="text-danger">@Html.ValidationMessageFor(m => m.Amount)</label>
            </div>
            <!-- Used this approach to date: https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/introduction/examining-the-edit-methods-and-edit-view -->

            <div class="form-group">
                @Html.EditorFor(model => model.ScheduleDate)
                @Html.ValidationMessageFor(m => m.ScheduleDate, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label asp-for="Period" class="control-label"></label>
                <select asp-for="Period" class="form-control">
                    @foreach (int id in Enum.GetValues(typeof(BillPayPeriod)))
                    {
                        if (id == (int)Model.Period)
                        {
                            <option value=@id selected> @Enum.ToObject(typeof(BillPayPeriod), id) </option>
                        }
                        else
                        {
                            <option value=@id> @Enum.ToObject(typeof(BillPayPeriod), id) </option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Payee" class="control-label"></label>
                <select asp-for="PayeeID" class="form-control">
                    @foreach (Payee payee in Model.Payees)
                    {
                        if (payee.PayeeID == Model.PayeeID)
                        {
                            <option value=@payee.PayeeID selected> @payee.PayeeName </option>
                        }
                        else
                        {
                            <option value=@payee.PayeeID> @payee.PayeeName </option>
                        }


                    }
                </select>
            </div>
            @Html.HiddenFor(m => m.Account)
            @Html.HiddenFor(m => m.BillPayID)
            @Html.HiddenFor(m => m.Customer)
            @Html.HiddenFor(m => m.PayeeID)
            @Html.HiddenFor(m => m.AccountNumber)
            @Html.HiddenFor(m => m.Payees)
            <button type="submit">Perform Transaction</button>
            @Html.ActionLink("Cancel Transcation", "", new { Controller = "BillPay", Action = "Modify" }, new { @class = "btn btn-primary" })
        </form>
    </div>

</div>
